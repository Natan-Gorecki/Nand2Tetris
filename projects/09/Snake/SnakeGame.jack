/** Class SnakeGame */
class SnakeGame {
    field Snake _snake;
    field FoodGenerator _foodGenerator;
    field int _direction;

    constructor SnakeGame new() {
        do Matrix.new();
        do Random.setSeed(4567);
        let _snake = Snake.new();
        let _foodGenerator = FoodGenerator.new(3);
        let _direction = Direction.Right();

        return this;
    }

    method void dispose() {
        do _snake.dispose();
        do Matrix.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var char key;
        var boolean exit;
        var int iteration;
        var boolean moveResult;
        let iteration = 0;
        let exit = false;

        while (~exit) {
            let key = Keyboard.keyPressed();

            if (key = KeyboardButton.LeftArrow()) {
                let _direction = Direction.Left();
            }
            if (key = KeyboardButton.UpArrow()) {
                let _direction = Direction.Up();
            }
            if (key = KeyboardButton.RightArrow()) {
                let _direction = Direction.Right();
            }
            if (key = KeyboardButton.DownArrow()) {
                let _direction = Direction.Down();
            }

            if (iteration = 10) {
                let iteration = 0;
                
                do _foodGenerator.generateFood();
                let moveResult = _snake.move(_direction);
                if (~moveResult) {
                    let exit = true;
                }
            }
            else {
                let iteration = iteration + 1;
            }

            do Sys.wait(25);
        }

        return;
    }
}